session: tiago_sim
init_cmd: |
  echo " "
  echo " "
  echo " "
  echo "Running Initialisation" | awk '{ gsub("Running Initialisation", "\033[1;21m\033[1;30m&\033[0m"); print }' ;

  #exec /bin/bash
  cd @TMULE_CONFIG_DIR@ || true
  set -o pipefail
  function export_default () {
    var_name="$1"
    var_default="$2"
    eval $var_name="${!var_name:-$var_default}"
    export $var_name
    echo "  $0 -> $var_name=${!var_name}"
  }

  # source ROS
  source "/opt/ros/$(rosversion -d)/setup.bash"

  # source the tiago catkin workspace
  source "$HOME/.bashrc"
  export_default CATKIN_WS "$HOME/ros_ws"

  # robot specific arguments
  export_default TIAGO_EE "false"
  export_default TIAGO_TYPE "iron"
  export_default TIAGO_x "0.0"
  export_default TIAGO_y "0.0"
  export_default TIAGO_z "0.0"
  export_default TIAGO_R "0.0"
  export_default TIAGO_P "0.0"
  export_default TIAGO_Y "0.0"

  # world arguments
  # choose a map between: maze, maze_corridor, maze_corridor_withTurn, maze_corridor_withDoors
  export_default WORLD "maze"
  export_default GZ_GUI "false"

  # choose a map between: single_agent_avoidance, multi_agent_avoidance
  export_default SCENARIO "single_agent_avoidance"

  # navigation specific arguments
  export_default GLOBAL_PLANNER "global_planner"
  export_default LOCAL_PLANNER "teb"
  export_default LOCALIZATION "amcl"
  export_default CONFIG_BASE_PATH "$(rospack find tiago_navigation)"
  export_default MAP "$HOME/.pal/tiago_maps/configurations/$WORLD"
  export_default NAMESPACE "tiago"

  # PNP specific arguments
  export_default PNP_PLANS "$CATKIN_WS/src/HRISim/hrisim_plans"
  export_default PNP_ACTIONS "$CATKIN_WS/src/HRISim/hrisim_actions"
  export_default PNP_CONDITIONS "$CATKIN_WS/src/HRISim/hrisim_conditions"

  # PedSim arguments
  # robot_mode == 0: CONTROLLED implies that the robot's velocity is set by some planning algorithm like DWA. Its very similar to the teleoperation mode, using tf in the mix is just a layer on top of this -->
  # robot_mode == 1: TELEOPERATION , we map the output of a teleop node (like joystick) to drive the robot -->
  # robot_mode == 2: SOCIAL mode means the robot's velocity is set by the social force just like the other agents -->
  export_default HUMAN_MODE "1"
  export_default MAX_HUMAN_SPEED "1.5"
  export_default ROBOT_RADIUS "2"
  export_default WITH_PED "true"
  export_default KBD_TELEOP "true"
  export_default HUMAN_x "-5"
  export_default HUMAN_y "5"
  export_default SPAWN_AGENT "true"
  export_default SPAWN_TELEOP_AGENT "true"
  export_default SPAWN_TIMEOUT "10.0"

windows:
  - name: roscore
    tags: ['core', 'robot']
    panes:
      - roscore
  - name: planning
    tags: ['core']
    panes:
      - 'roslaunch pnp_ros pnp_ros.launch plans_folder:=$PNP_PLANS actions_folder:=$PNP_ACTIONS conditions_folder:=$PNP_CONDITIONS'
  - name: visual
    tags: ['core', 'robot']
    panes:
      - 'roslaunch hrisim_gazebo simulation.launch robot:=$TIAGO_TYPE public_sim:=true world:=$WORLD TIAGO_x:=$TIAGO_x TIAGO_y:=$TIAGO_y TIAGO_z:=$TIAGO_z TIAGO_R:=$TIAGO_R TIAGO_P:=$TIAGO_P TIAGO_Y:=$TIAGO_Y spawn_agent:=$SPAWN_AGENT spawn_teleop_agent:=$SPAWN_TELEOP_AGENT spawn_timeout:=$SPAWN_TIMEOUT'
      - 'rviz -d "$(rospack find hrisim_rviz)/config/rviz/tiago_rviz_sim.rviz" --fixed-frame map'
      - 'roslaunch hrisim_rviz visualisation_rviz.launch'
  - name: scenario
    tags: ['scene']
    panes:
      - 'roslaunch tiago_2dnav_gazebo navigation.launch public_sim:=true global_planner:=$GLOBAL_PLANNER local_planner:=$LOCAL_PLANNER localization:=$LOCALIZATION config_base_path:=$CONFIG_BASE_PATH map:=$MAP'
      - 'rosrun hrisim_twist_mux mytwist_mux.py'
      - 'roslaunch hrisim_pedsim mysimulator.launch scenario:=$SCENARIO robot_mode:=$HUMAN_MODE max_robot_speed:=$MAX_HUMAN_SPEED robot_radius:=$ROBOT_RADIUS kbd_teleop:=$KBD_TELEOP with_ped:=$WITH_PED ped_x:=$HUMAN_x ped_y:=$HUMAN_y ped_theta:=0'
      - 'roslaunch hrisim_risk risk.launch'
  - name: roscausal
    tags: ['roscausal']
    panes:
      - 'roslaunch roscausal_robot robot_state.launch'
      - 'roslaunch roscausal_human human_state.launch teleop_people_topic:=/ped/control/teleop_persons goal_param:='/hri/human_goal'
  - name: experiment
    tags: ['exp']
    panes:
      - 'cd ~/ros_ws/src/HRISim/hrisim_plans; echo -e "\033[1;31mStart your plan here: python PassByTheCentre.py nRepetition Bagname, e.g.\n python PassByTheCentre.py 8 robotPriority\033[0m"'
      - 'rosrun pedsim_simulator keyboard_teleop.py'
      - 'cd ~/ros_ws/src/HRISim/hrisim_causal_discovery; echo -e "\033[1;31mStart your data collector node\033[0m"'
      - 'cd ~/ros_ws/src/HRISim/hrisim_causal_discovery; echo -e "\033[1;31mStart your causal discovery node\033[0m"'